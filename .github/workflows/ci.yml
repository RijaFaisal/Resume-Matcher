name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check src/ tests/
        ruff format --check src/ tests/
    
    - name: Format check with black
      run: |
        black --check src/ tests/

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html --cov-fail-under=80
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  canary-deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to canary environment
      run: |
        docker run -d \
          --name resume-matcher-canary \
          -p 8001:8000 \
          -e CANARY=true \
          ghcr.io/${{ github.repository }}:${{ github.sha }}

  acceptance-tests:
    needs: canary-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Wait for service to be ready
      run: |
        sleep 30
        curl -f http://localhost:8001/health || exit 1
    
    - name: Run acceptance tests
      run: |
        # Test health endpoint
        curl -f http://localhost:8001/health
        
        # Test root endpoint
        curl -f http://localhost:8001/
        
        # Test API documentation
        curl -f http://localhost:8001/docs
        
        # Test model info endpoint
        curl -f http://localhost:8001/model/info
        
        # Test with sample data (if available)
        echo "All acceptance tests passed"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Security audit with pip-audit
      run: |
        pip-audit --desc --format=json --output=audit.json
        pip-audit --desc --format=text
    
    - name: Check for critical vulnerabilities
      run: |
        pip-audit --desc --format=json | jq -r '.[] | select(.severity == "CRITICAL") | .id' | wc -l
        if [ $(pip-audit --desc --format=json | jq -r '.[] | select(.severity == "CRITICAL") | .id' | wc -l) -gt 0 ]; then
          echo "Critical vulnerabilities found!"
          exit 1
        fi